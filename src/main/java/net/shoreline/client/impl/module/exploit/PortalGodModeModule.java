package net.shoreline.client.impl.module.exploit;

import net.minecraft.client.gui.screen.DownloadingTerrainScreen;
import net.minecraft.network.packet.s2c.play.PlayerPositionLookS2CPacket;
import net.shoreline.client.api.config.Config;
import net.shoreline.client.api.config.setting.BooleanConfig;
import net.shoreline.client.api.event.EventStage;
import net.shoreline.client.api.event.listener.EventListener;
import net.shoreline.client.api.module.ModuleCategory;
import net.shoreline.client.api.module.ToggleModule;
import net.shoreline.client.impl.event.TickEvent;
import net.shoreline.client.impl.event.network.PacketEvent;
import net.shoreline.client.util.math.timer.CacheTimer;
import net.shoreline.client.util.math.timer.Timer;

/**
 * @author linus
 * @since 1.0
 */
public class PortalGodModeModule extends ToggleModule {

    //
    Config<Boolean> positionAdjustConfig = new BooleanConfig("PositionAdjust", "Adjusts position to match server portal position", true);
    //
    private double teleportX;
    private double teleportY;
    private double teleportZ;
    private boolean cancelTeleport;
    //
    private final Timer portalTimer = new CacheTimer();

    /**
     *
     */
    public PortalGodModeModule() {
        super("PortalGodMode", "Makes the player invincible while in portals",
                ModuleCategory.EXPLOIT);
    }

    @Override
    public void onEnable() {
        teleportX = 0.0;
        teleportY = 0.0;
        teleportZ = 0.0;
    }

    @EventListener
    public void onPacketInbound(PacketEvent.Inbound event) {
        if (mc.player == null) {
            return;
        }
        if (mc.currentScreen instanceof DownloadingTerrainScreen) {
            cancelTeleport = true;
            mc.currentScreen = null;
            portalTimer.reset();
        }
        if (event.getPacket() instanceof PlayerPositionLookS2CPacket packet) {
            if (positionAdjustConfig.getValue() && !mc.player.isRiding()) {
                teleportX = packet.getX();
                teleportY = packet.getY();
                teleportZ = packet.getZ();
                mc.player.setPosition(packet.getX(), packet.getY(), packet.getZ());
            }
            event.cancel();
        }
    }

    @EventListener
    public void onTick(TickEvent event) {
        if (event.getStage() == EventStage.PRE && teleportX != 0.0
                && teleportY != 0.0 && teleportZ != 0.0 && cancelTeleport) {
            mc.player.setPosition(teleportX, teleportY, teleportZ);
            if (portalTimer.passed(2500)) {
                cancelTeleport = false;
            }
        }
    }
}
