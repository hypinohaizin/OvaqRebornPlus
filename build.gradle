plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.github.gmazzo.buildconfig' version '5.3.5'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

buildConfig {
    buildConfigField(String, "HASH", "${execute("git rev-parse --short=8 HEAD")}")
    buildConfigField(String, "VERSION", project.mod_version)
    buildConfigField(String, "BUILD_IDENTIFIER", project.build_identifier)

    packageName "net.shoreline.client"
    useJavaOutput()
    generateAtSync = true
    documentation.set("Generated by BuildConfig plugin")
}

sourceSets.main.java.srcDirs += "build/gen/buildconfig/src/main"

loom {
    accessWidenerPath = file("src/main/resources/ovaqplus.accesswidener")
   // mixin {
//       defaultRefmapName = "ovaqreborn.refmap.json"
  //  }
}

configurations {
    libImpl
    extraLibs

    modImplementation.extendsFrom(modInclude)
    include.extendsFrom(modInclude)

    implementation.extendsFrom(library)
    shadow.extendsFrom(library)
}


repositories {
    flatDir {
        dirs 'lib'
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = 'swt-repo'
        url = "https://maven-eclipse.github.io/maven"
    }
    maven {
        name = "meteor-maven"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroup 'org.ladysnake'
            includeGroupByRegex 'dev\\.onyxstudios.*'
        }
    }
    maven {
        name = "modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    mavenCentral() {
        url "https://jitpack.io/"
        url "https://impactdevelopment.github.io/maven/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_version}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "cabaletta:baritone-api:${baritone_api_version}"
    libImpl("io.netty:netty-handler-proxy:${project.netty_version}") { transitive = false }
    libImpl("io.netty:netty-codec-socks:${project.netty_version}") { transitive = false }
    api("org.apiguardian:apiguardian-api:1.1.2")
    modInclude "org.ladysnake:satin:1.16.0"
    include modImplementation("maven.modrinth:renderer:xmCBT4oh")
    include modImplementation("maven.modrinth:in-game-account-switcher:Drx3f4Kl")
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17

    // Make this run before the compileJava task
    dependsOn generateBuildConfig
}

def execute(String cmd) {
    try {
        final def stdout = new ByteArrayOutputStream()

        exec {
            commandLine cmd.split(" ")
            standardOutput = stdout
        }

        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}


